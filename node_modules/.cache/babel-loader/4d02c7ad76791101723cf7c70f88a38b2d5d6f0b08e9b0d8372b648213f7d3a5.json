{"ast":null,"code":"import _classCallCheck from \"/home/home/Desktop/MyCode/Assignments/assign/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/home/Desktop/MyCode/Assignments/assign/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/home/Desktop/MyCode/Assignments/assign/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/home/Desktop/MyCode/Assignments/assign/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nfunction fireSyntheticPointerEvent(name, handler) {\n  if (!handler) return;\n  var syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nvar PressGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(PressGesture, _Feature);\n  var _super = _createSuper(PressGesture);\n  function PressGesture() {\n    var _this;\n    _classCallCheck(this, PressGesture);\n    _this = _super.apply(this, arguments);\n    _this.removeStartListeners = noop;\n    _this.removeEndListeners = noop;\n    _this.removeAccessibleListeners = noop;\n    _this.startPointerPress = function (startEvent, startInfo) {\n      _this.removeEndListeners();\n      if (_this.isPressing) return;\n      var props = _this.node.getProps();\n      var endPointerPress = function endPointerPress(endEvent, endInfo) {\n        if (!_this.checkPressEnd()) return;\n        var _this$node$getProps = _this.node.getProps(),\n          onTap = _this$node$getProps.onTap,\n          onTapCancel = _this$node$getProps.onTapCancel;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(_this.node.current, endEvent.target) ? onTapCancel && onTapCancel(endEvent, endInfo) : onTap && onTap(endEvent, endInfo);\n      };\n      var removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n        passive: !(props.onTap || props[\"onPointerUp\"])\n      });\n      var removePointerCancelListener = addPointerEvent(window, \"pointercancel\", function (cancelEvent, cancelInfo) {\n        return _this.cancelPress(cancelEvent, cancelInfo);\n      }, {\n        passive: !(props.onTapCancel || props[\"onPointerCancel\"])\n      });\n      _this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n      _this.startPress(startEvent, startInfo);\n    };\n    _this.startAccessiblePress = function () {\n      var handleKeydown = function handleKeydown(keydownEvent) {\n        if (keydownEvent.key !== \"Enter\" || _this.isPressing) return;\n        var handleKeyup = function handleKeyup(keyupEvent) {\n          if (keyupEvent.key !== \"Enter\" || !_this.checkPressEnd()) return;\n          fireSyntheticPointerEvent(\"up\", _this.node.getProps().onTap);\n        };\n        _this.removeEndListeners();\n        _this.removeEndListeners = addDomEvent(_this.node.current, \"keyup\", handleKeyup);\n        fireSyntheticPointerEvent(\"down\", function (event, info) {\n          _this.startPress(event, info);\n        });\n      };\n      var removeKeydownListener = addDomEvent(_this.node.current, \"keydown\", handleKeydown);\n      var handleBlur = function handleBlur() {\n        if (!_this.isPressing) return;\n        fireSyntheticPointerEvent(\"cancel\", function (cancelEvent, cancelInfo) {\n          return _this.cancelPress(cancelEvent, cancelInfo);\n        });\n      };\n      var removeBlurListener = addDomEvent(_this.node.current, \"blur\", handleBlur);\n      _this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n    };\n    return _this;\n  }\n  _createClass(PressGesture, [{\n    key: \"startPress\",\n    value: function startPress(event, info) {\n      this.isPressing = true;\n      var _this$node$getProps2 = this.node.getProps(),\n        onTapStart = _this$node$getProps2.onTapStart,\n        whileTap = _this$node$getProps2.whileTap;\n      /**\n       * Ensure we trigger animations before firing event callback\n       */\n      if (whileTap && this.node.animationState) {\n        this.node.animationState.setActive(AnimationType.Tap, true);\n      }\n      onTapStart && onTapStart(event, info);\n    }\n  }, {\n    key: \"checkPressEnd\",\n    value: function checkPressEnd() {\n      this.removeEndListeners();\n      this.isPressing = false;\n      var props = this.node.getProps();\n      if (props.whileTap && this.node.animationState) {\n        this.node.animationState.setActive(AnimationType.Tap, false);\n      }\n      return !isDragActive();\n    }\n  }, {\n    key: \"cancelPress\",\n    value: function cancelPress(event, info) {\n      if (!this.checkPressEnd()) return;\n      var _this$node$getProps3 = this.node.getProps(),\n        onTapCancel = _this$node$getProps3.onTapCancel;\n      onTapCancel && onTapCancel(event, info);\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var props = this.node.getProps();\n      var removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, {\n        passive: !(props.onTapStart || props[\"onPointerStart\"])\n      });\n      var removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n      this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.removeStartListeners();\n      this.removeEndListeners();\n      this.removeAccessibleListeners();\n    }\n  }]);\n  return PressGesture;\n}(Feature);\nexport { PressGesture };","map":{"version":3,"names":["extractEventInfo","addDomEvent","addPointerEvent","Feature","AnimationType","pipe","isDragActive","isNodeOrChild","noop","fireSyntheticPointerEvent","name","handler","syntheticPointerEvent","PointerEvent","PressGesture","arguments","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","props","node","getProps","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","current","target","removePointerUpListener","window","passive","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","handleKeydown","keydownEvent","key","handleKeyup","keyupEvent","event","info","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","animationState","setActive","Tap","removePointerListener","removeFocusListener"],"sources":["/home/home/Desktop/MyCode/Assignments/assign/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}